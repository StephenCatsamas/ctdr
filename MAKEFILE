TGT_DIR = .\target\make
INC_DIR = .\inc /I.\lib\lodepng

CC = cl
OBJ_DIR = .\target\obj 
OPLEVEL = /O2 
# OPLEVEL = /Od /DEBUG
CFLAGS = /I $(INC_DIR) /std:c++20 $(OPLEVEL) /Zi /EHsc

MAIN_CFLAGS = $(CFLAGS) /Fo$(OBJ_DIR)\ /Fe.\target\ 
LIB_CFLAGS =  $(CFLAGS) /Fo$(OBJ_DIR)\ /Fe.\target\ /LD

MAIN_SOURCE = src\main.cpp 
LIB_SOURCE = src\lib.cpp 

##LIB FILES##
LODEPNG_DIR = .\lib\lodepng

OBJ_FILES = $(OBJ_DIR)\util.obj $(OBJ_DIR)\field.obj $(OBJ_DIR)\recon.obj $(OBJ_DIR)\sim.obj $(LODEPNG_DIR)\target\lodepng.obj

default: all
all: $(TGT_DIR)\main $(TGT_DIR)\lib

$(OBJ_DIR)\sim.obj: src\sim.cpp inc\sim.h
	$(CC) /c $(CFLAGS) /Fo$(OBJ_DIR)\ src\sim.cpp

$(OBJ_DIR)\recon.obj: src\recon.cpp inc\recon.h
	$(CC) /c $(CFLAGS) /Fo$(OBJ_DIR)\ src\recon.cpp

$(OBJ_DIR)\field.obj: src\field.cpp inc\field.h
	$(CC) /c $(CFLAGS) /Fo$(OBJ_DIR)\ src\field.cpp

$(OBJ_DIR)\util.obj: src\util.cpp inc\util.h
	$(CC) /c $(CFLAGS) /Fo$(OBJ_DIR)\ src\util.cpp

$(TGT_DIR)\obj: $(OBJ_FILES)
	echo. > $(TGT_DIR)\obj

$(TGT_DIR)\main: $(MAIN_SOURCE) inc\main.h $(TGT_DIR)\obj
	$(CC) $(MAIN_CFLAGS) $(MAIN_SOURCE) $(OBJ_FILES) 
	echo. > $(TGT_DIR)\main

$(TGT_DIR)\lib: $(LIB_SOURCE) inc\lib.h  $(TGT_DIR)\obj
	$(CC) $(LIB_CFLAGS) $(LIB_SOURCE) $(OBJ_FILES)
	echo. > $(TGT_DIR)\lib


$(LODEPNG_DIR)\target\lodepng.obj: $(LODEPNG_DIR)\lodepng.cpp $(LODEPNG_DIR)\lodepng.h
	if not exist "$(LODEPNG_DIR)\target\" mkdir $(LODEPNG_DIR)\target
	$(CC) /c $(CFLAGS) /Fo$(LODEPNG_DIR)\target\ \target\ $(LODEPNG_DIR)\lodepng.cpp

# $(TGT_DIR)\copy: $(TGT_DIR)\lib
#	copy target\lib.dll app\lib.dll
#	echo. > $(TGT_DIR)\copy

.PHONY: main
main: $(TGT_DIR)\deps $(TGT_DIR)\main

.PHONY: lib
lib: $(TGT_DIR)\deps $(TGT_DIR)\lib

.PHONY: deps
deps: $(LODEPNG_DIR)\target\lodepng.obj
	echo. > $(TGT_DIR)\deps

.PHONY: runc
runc: $(TGT_DIR)\main
	.\target\main.exe

# .PHONY: runvis
# runvis:
#	@cd app
#	vis.py
#	@cd ..

.PHONY: clean
clean:
	cd target
	del * /S /Q
	cd ..
	cd $(LODEPNG_DIR)\target
	del * /S /Q
# cd -